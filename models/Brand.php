<?php

namespace app\models;

use Yii;
use yii\base\BaseObject;

/**
 * This is the model class for table "brands".
 *
 * @property int $id
 * @property string $title
 */
class Brand extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'brands';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['title'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
        ];
    }

    public function saveImage($filename) // УДАЛИТЬ? дублирует функционал imageupload
    {
        $this->image = $filename; // передаём имя файла в параметр image бренда
        return $this->save(false); // сохраняем
    }

    public function deleteImage() // УДАЛИТЬ? дублирует функционал imageupload
    {
        $imageUploadModel = new ImageUpload(); // инициализируем новый экз. класса imageupload
        $imageUploadModel->deleteCurrentImage($this->image); // удаляем из базы значение картинки
    }
    public function beforeDelete() // УДАЛИТЬ? дублирует функционал imageupload
    {
        $this->deleteImage(); // удаляем файл картинки перед удалением из базы
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function showImage() // УДАЛИТЬ? дублирует функционал imageupload
    {
        return ($this->image) ? '/uploads/' . $this->image : '/images/no-image.png'; // отрисоваваем картинку, если она есть, если нет - показываем картинку-"затычку"
    }

    public function getProducts()
    {
        return $this->hasMany(Product::class, ['brand_id' => 'id']);
    }

    public static function getAll()
    {
        return Brand::find()->all();
    }
}